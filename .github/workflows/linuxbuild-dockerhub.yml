name: Build Linux Binary, Container Image and Push to Docker Hub

on:
  workflow_dispatch:
    inputs:
      image_tag:
        description: 'Docker image tag'
        required: true
        default: 'latest'
        type: string
jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'
      - name: Build .NET Server (Linux)
        run: | 
          chmod +x ./DCS-SRS-DockerServer/build-linux-server.sh
          ./DCS-SRS-DockerServer/build-linux-server.sh
        shell: bash
      - name: Set Docker tags
        id: set_tags
        run: |
          TAGS="${{ secrets.DOCKERHUB_USERNAME }}/dcs-srs-server:${{ github.event.inputs.image_tag }}"
          if [[ "${{ github.event.release.prerelease }}" != "true" ]]; then
            TAGS="$TAGS,${{ secrets.DOCKERHUB_USERNAME }}/dcs-srs-server:latest"
          fi
          echo "tags=$TAGS" >> $GITHUB_OUTPUT

      - name: Build and Push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./DCS-SRS-DockerServer/Dockerfile
          push: true
          tags: ${{ steps.set_tags.outputs.tags }}
      - name: Upload SRS-Server-Commandline artifact
        uses: actions/upload-artifact@v4
        with:
          name: SRS-Server-Commandline
          path: ./install-build/ServerCommandLine-Linux/SRS-Server-Commandline