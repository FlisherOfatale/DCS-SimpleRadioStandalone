name: Build and Push to Docker Hub

on:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      srs_tag:
        description: 'SRS Version tag'
        required: true
        default: '0.0.0.0'
      image_tag:
        description: 'Docker image tag'
        required: true
        default: '0.0.0.0'
jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set SRS and Image Tag (for release trigger)
        if: github.event_name == 'release'
        run: |
          echo "SRS_TAG=${GITHUB_REF##*/}" >> $GITHUB_ENV
          echo "IMAGE_TAG=${GITHUB_REF##*/}" >> $GITHUB_ENV

      - name: Set SRS and Image Tag (for manual trigger)
        if: github.event_name == 'workflow_dispatch'
        run: |
          echo "SRS_TAG=${{ github.event.inputs.srs_tag }}" >> $GITHUB_ENV
          echo "IMAGE_TAG=${{ github.event.inputs.image_tag }}" >> $GITHUB_ENV

      - name: Download SRS Release Zip
        run: |
          curl -L -o DCS-SimpleRadioStandalone.zip https://github.com/${{ github.repository }}/releases/download/${{ env.SRS_TAG }}/DCS-SimpleRadioStandalone-${{ env.SRS_TAG }}.zip

      - name: Extract SRS-Server-Commandline
        run: |
          unzip -j DCS-SimpleRadioStandalone.zip 'ServerCommandLine-Linux/SRS-Server-Commandline' -d .

      - name: Build and Push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/dcs-srs-server:${{ env.IMAGE_TAG }}
            ${{ secrets.DOCKERHUB_USERNAME }}/dcs-srs-server:latest